// <auto-generated />
using System;
using CovidLAMap.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CovidLAMap.Data.Migrations
{
    [DbContext(typeof(CovidDbContext2))]
    [Migration("20200427020646_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:postgis", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CovidLAMap.Core.DTOs.EthEventDTO", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("BlockHash")
                        .HasColumnType("text");

                    b.Property<int>("BlockNumber")
                        .HasColumnType("integer");

                    b.Property<string>("EventSpecificationSignature")
                        .HasColumnType("text");

                    b.Property<int>("FailedTimes")
                        .HasColumnType("integer");

                    b.Property<string>("FilterId")
                        .HasColumnType("text");

                    b.Property<int>("LogIndex")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NetworkName")
                        .HasColumnType("text");

                    b.Property<string>("NodeName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("TransactionHash")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EthEvents");
                });

            modelBuilder.Entity("CovidLAMap.Core.DTOs.EthValueDTO", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EthEventDTOId")
                        .HasColumnType("text");

                    b.Property<string>("EthEventDTOId1")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EthEventDTOId");

                    b.HasIndex("EthEventDTOId1");

                    b.ToTable("EthValueDTO");
                });

            modelBuilder.Entity("CovidLAMap.Core.Models.Country", b =>
                {
                    b.Property<int>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gid")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('countries_gid_seq'::regclass)");

                    b.Property<string>("Abbrev")
                        .HasColumnName("abbrev")
                        .HasColumnType("character varying(13)")
                        .HasMaxLength(13);

                    b.Property<short?>("AbbrevLen")
                        .HasColumnName("abbrev_len")
                        .HasColumnType("smallint");

                    b.Property<string>("Adm0A3")
                        .HasColumnName("adm0_a3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Adm0A3Is")
                        .HasColumnName("adm0_a3_is")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<short?>("Adm0A3Un")
                        .HasColumnName("adm0_a3_un")
                        .HasColumnType("smallint");

                    b.Property<string>("Adm0A3Us")
                        .HasColumnName("adm0_a3_us")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<short?>("Adm0A3Wb")
                        .HasColumnName("adm0_a3_wb")
                        .HasColumnType("smallint");

                    b.Property<short?>("Adm0Dif")
                        .HasColumnName("adm0_dif")
                        .HasColumnType("smallint");

                    b.Property<string>("Admin")
                        .HasColumnName("admin")
                        .HasColumnType("character varying(36)")
                        .HasMaxLength(36);

                    b.Property<string>("BrkA3")
                        .HasColumnName("brk_a3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<short?>("BrkDiff")
                        .HasColumnName("brk_diff")
                        .HasColumnType("smallint");

                    b.Property<string>("BrkGroup")
                        .HasColumnName("brk_group")
                        .HasColumnType("character varying(17)")
                        .HasMaxLength(17);

                    b.Property<string>("BrkName")
                        .HasColumnName("brk_name")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.Property<Geometry>("Centroid")
                        .HasColumnName("centroid")
                        .HasColumnType("geometry");

                    b.Property<string>("Continent")
                        .HasColumnName("continent")
                        .HasColumnType("character varying(23)")
                        .HasMaxLength(23);

                    b.Property<string>("Economy")
                        .HasColumnName("economy")
                        .HasColumnType("character varying(26)")
                        .HasMaxLength(26);

                    b.Property<string>("Featurecla")
                        .HasColumnName("featurecla")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Fips10")
                        .HasColumnName("fips_10_")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("FormalEn")
                        .HasColumnName("formal_en")
                        .HasColumnType("character varying(52)")
                        .HasMaxLength(52);

                    b.Property<string>("FormalFr")
                        .HasColumnName("formal_fr")
                        .HasColumnType("character varying(35)")
                        .HasMaxLength(35);

                    b.Property<double?>("GdpMdEst")
                        .HasColumnName("gdp_md_est")
                        .HasColumnType("double precision");

                    b.Property<short?>("GdpYear")
                        .HasColumnName("gdp_year")
                        .HasColumnType("smallint");

                    b.Property<MultiPolygon>("Geom")
                        .HasColumnName("geom")
                        .HasColumnType("geometry(MultiPolygon)");

                    b.Property<short?>("GeouDif")
                        .HasColumnName("geou_dif")
                        .HasColumnType("smallint");

                    b.Property<string>("Geounit")
                        .HasColumnName("geounit")
                        .HasColumnType("character varying(36)")
                        .HasMaxLength(36);

                    b.Property<string>("GuA3")
                        .HasColumnName("gu_a3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<short?>("Homepart")
                        .HasColumnName("homepart")
                        .HasColumnType("smallint");

                    b.Property<string>("IncomeGrp")
                        .HasColumnName("income_grp")
                        .HasColumnType("character varying(23)")
                        .HasMaxLength(23);

                    b.Property<string>("IsoA2")
                        .HasColumnName("iso_a2")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("IsoA3")
                        .HasColumnName("iso_a3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("IsoA3Eh")
                        .HasColumnName("iso_a3_eh")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("IsoN3")
                        .HasColumnName("iso_n3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<short?>("Labelrank")
                        .HasColumnName("labelrank")
                        .HasColumnType("smallint");

                    b.Property<short?>("Lastcensus")
                        .HasColumnName("lastcensus")
                        .HasColumnType("smallint");

                    b.Property<short?>("Level")
                        .HasColumnName("level")
                        .HasColumnType("smallint");

                    b.Property<short?>("LongLen")
                        .HasColumnName("long_len")
                        .HasColumnType("smallint");

                    b.Property<short?>("Mapcolor13")
                        .HasColumnName("mapcolor13")
                        .HasColumnType("smallint");

                    b.Property<short?>("Mapcolor7")
                        .HasColumnName("mapcolor7")
                        .HasColumnType("smallint");

                    b.Property<short?>("Mapcolor8")
                        .HasColumnName("mapcolor8")
                        .HasColumnType("smallint");

                    b.Property<short?>("Mapcolor9")
                        .HasColumnName("mapcolor9")
                        .HasColumnType("smallint");

                    b.Property<double?>("MaxLabel")
                        .HasColumnName("max_label")
                        .HasColumnType("double precision");

                    b.Property<double?>("MinLabel")
                        .HasColumnName("min_label")
                        .HasColumnType("double precision");

                    b.Property<double?>("MinZoom")
                        .HasColumnName("min_zoom")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("NameAlt")
                        .HasColumnName("name_alt")
                        .HasColumnType("character varying(19)")
                        .HasMaxLength(19);

                    b.Property<string>("NameAr")
                        .HasColumnName("name_ar")
                        .HasColumnType("character varying(72)")
                        .HasMaxLength(72);

                    b.Property<string>("NameBn")
                        .HasColumnName("name_bn")
                        .HasColumnType("character varying(148)")
                        .HasMaxLength(148);

                    b.Property<string>("NameCiawf")
                        .HasColumnName("name_ciawf")
                        .HasColumnType("character varying(45)")
                        .HasMaxLength(45);

                    b.Property<string>("NameDe")
                        .HasColumnName("name_de")
                        .HasColumnType("character varying(46)")
                        .HasMaxLength(46);

                    b.Property<string>("NameEl")
                        .HasColumnName("name_el")
                        .HasColumnType("character varying(88)")
                        .HasMaxLength(88);

                    b.Property<string>("NameEn")
                        .HasColumnName("name_en")
                        .HasColumnType("character varying(44)")
                        .HasMaxLength(44);

                    b.Property<string>("NameEs")
                        .HasColumnName("name_es")
                        .HasColumnType("character varying(44)")
                        .HasMaxLength(44);

                    b.Property<string>("NameFr")
                        .HasColumnName("name_fr")
                        .HasColumnType("character varying(54)")
                        .HasMaxLength(54);

                    b.Property<string>("NameHi")
                        .HasColumnName("name_hi")
                        .HasColumnType("character varying(126)")
                        .HasMaxLength(126);

                    b.Property<string>("NameHu")
                        .HasColumnName("name_hu")
                        .HasColumnType("character varying(52)")
                        .HasMaxLength(52);

                    b.Property<string>("NameId")
                        .HasColumnName("name_id")
                        .HasColumnType("character varying(46)")
                        .HasMaxLength(46);

                    b.Property<string>("NameIt")
                        .HasColumnName("name_it")
                        .HasColumnType("character varying(48)")
                        .HasMaxLength(48);

                    b.Property<string>("NameJa")
                        .HasColumnName("name_ja")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<string>("NameKo")
                        .HasColumnName("name_ko")
                        .HasColumnType("character varying(47)")
                        .HasMaxLength(47);

                    b.Property<short?>("NameLen")
                        .HasColumnName("name_len")
                        .HasColumnType("smallint");

                    b.Property<string>("NameLong")
                        .HasColumnName("name_long")
                        .HasColumnType("character varying(36)")
                        .HasMaxLength(36);

                    b.Property<string>("NameNl")
                        .HasColumnName("name_nl")
                        .HasColumnType("character varying(49)")
                        .HasMaxLength(49);

                    b.Property<string>("NamePl")
                        .HasColumnName("name_pl")
                        .HasColumnType("character varying(47)")
                        .HasMaxLength(47);

                    b.Property<string>("NamePt")
                        .HasColumnName("name_pt")
                        .HasColumnType("character varying(43)")
                        .HasMaxLength(43);

                    b.Property<string>("NameRu")
                        .HasColumnName("name_ru")
                        .HasColumnType("character varying(86)")
                        .HasMaxLength(86);

                    b.Property<string>("NameSort")
                        .HasColumnName("name_sort")
                        .HasColumnType("character varying(36)")
                        .HasMaxLength(36);

                    b.Property<string>("NameSv")
                        .HasColumnName("name_sv")
                        .HasColumnType("character varying(57)")
                        .HasMaxLength(57);

                    b.Property<string>("NameTr")
                        .HasColumnName("name_tr")
                        .HasColumnType("character varying(42)")
                        .HasMaxLength(42);

                    b.Property<string>("NameVi")
                        .HasColumnName("name_vi")
                        .HasColumnType("character varying(56)")
                        .HasMaxLength(56);

                    b.Property<string>("NameZh")
                        .HasColumnName("name_zh")
                        .HasColumnType("character varying(36)")
                        .HasMaxLength(36);

                    b.Property<decimal?>("NeId")
                        .HasColumnName("ne_id")
                        .HasColumnType("numeric(10,0)");

                    b.Property<string>("NoteAdm0")
                        .HasColumnName("note_adm0")
                        .HasColumnType("character varying(22)")
                        .HasMaxLength(22);

                    b.Property<string>("NoteBrk")
                        .HasColumnName("note_brk")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<decimal?>("PopEst")
                        .HasColumnName("pop_est")
                        .HasColumnType("numeric(10,0)");

                    b.Property<short?>("PopRank")
                        .HasColumnName("pop_rank")
                        .HasColumnType("smallint");

                    b.Property<short?>("PopYear")
                        .HasColumnName("pop_year")
                        .HasColumnType("smallint");

                    b.Property<string>("Postal")
                        .HasColumnName("postal")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4);

                    b.Property<string>("RegionUn")
                        .HasColumnName("region_un")
                        .HasColumnType("character varying(23)")
                        .HasMaxLength(23);

                    b.Property<string>("RegionWb")
                        .HasColumnName("region_wb")
                        .HasColumnType("character varying(26)")
                        .HasMaxLength(26);

                    b.Property<short?>("Scalerank")
                        .HasColumnName("scalerank")
                        .HasColumnType("smallint");

                    b.Property<string>("SovA3")
                        .HasColumnName("sov_a3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Sovereignt")
                        .HasColumnName("sovereignt")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.Property<string>("SuA3")
                        .HasColumnName("su_a3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<short?>("SuDif")
                        .HasColumnName("su_dif")
                        .HasColumnType("smallint");

                    b.Property<string>("Subregion")
                        .HasColumnName("subregion")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Subunit")
                        .HasColumnName("subunit")
                        .HasColumnType("character varying(36)")
                        .HasMaxLength(36);

                    b.Property<short?>("Tiny")
                        .HasColumnName("tiny")
                        .HasColumnType("smallint");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("character varying(17)")
                        .HasMaxLength(17);

                    b.Property<string>("UnA3")
                        .HasColumnName("un_a3")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4);

                    b.Property<string>("WbA2")
                        .HasColumnName("wb_a2")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("WbA3")
                        .HasColumnName("wb_a3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Wikidataid")
                        .HasColumnName("wikidataid")
                        .HasColumnType("character varying(8)")
                        .HasMaxLength(8);

                    b.Property<short?>("Wikipedia")
                        .HasColumnName("wikipedia")
                        .HasColumnType("smallint");

                    b.Property<int?>("WoeId")
                        .HasColumnName("woe_id")
                        .HasColumnType("integer");

                    b.Property<int?>("WoeIdEh")
                        .HasColumnName("woe_id_eh")
                        .HasColumnType("integer");

                    b.Property<string>("WoeNote")
                        .HasColumnName("woe_note")
                        .HasColumnType("character varying(167)")
                        .HasMaxLength(167);

                    b.HasKey("Gid")
                        .HasName("countries_pkey");

                    b.HasIndex("Geom")
                        .HasName("countries_geom_idx")
                        .HasAnnotation("Npgsql:IndexMethod", "gist");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CovidLAMap.Core.Models.RegisteredCredential", b =>
                {
                    b.Property<string>("HashId")
                        .HasColumnType("text");

                    b.Property<short>("Age")
                        .HasColumnType("smallint");

                    b.Property<string>("CitizenAddress")
                        .HasColumnType("text");

                    b.Property<int>("CountryGid")
                        .HasColumnName("CountryGId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CredentialCreation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CredentialType")
                        .HasColumnType("integer");

                    b.Property<bool?>("HasBreathingIssues")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasCought")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasFever")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasHeadache")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasLossSmell")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasMusclePain")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasNoSymptoms")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasSoreThroat")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasSymptoms")
                        .HasColumnType("boolean");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean");

                    b.Property<double>("Lat")
                        .HasColumnType("double precision");

                    b.Property<Point>("Location")
                        .HasColumnType("geometry(Point)");

                    b.Property<double>("Lon")
                        .HasColumnType("double precision");

                    b.Property<int>("Reason")
                        .HasColumnType("integer");

                    b.Property<int>("Sex")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("StateGid")
                        .HasColumnName("StateGId")
                        .HasColumnType("integer");

                    b.Property<string>("SubjectHashId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("HashId");

                    b.HasIndex("CountryGid")
                        .HasName("fki_InCountry");

                    b.HasIndex("StateGid")
                        .HasName("fki_InState");

                    b.HasIndex("IsRevoked", "SubjectHashId")
                        .HasName("SubjectIdIdx")
                        .HasAnnotation("Npgsql:IndexCollation", new[] { null, "C.UTF-8" })
                        .HasAnnotation("Npgsql:IndexOperators", new[] { null, "varchar_ops" });

                    b.ToTable("RegisteredCredentials");
                });

            modelBuilder.Entity("CovidLAMap.Core.Models.State", b =>
                {
                    b.Property<int>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gid")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('ne_10m_admin_1_states_provinces_gid_seq'::regclass)");

                    b.Property<string>("Abbrev")
                        .HasColumnName("abbrev")
                        .HasColumnType("character varying(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Adm0A3")
                        .HasColumnName("adm0_a3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<short?>("Adm0Label")
                        .HasColumnName("adm0_label")
                        .HasColumnType("smallint");

                    b.Property<short?>("Adm0Sr")
                        .HasColumnName("adm0_sr")
                        .HasColumnType("smallint");

                    b.Property<string>("Adm1Code")
                        .HasColumnName("adm1_code")
                        .HasColumnType("character varying(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Admin")
                        .HasColumnName("admin")
                        .HasColumnType("character varying(36)")
                        .HasMaxLength(36);

                    b.Property<short?>("AreaSqkm")
                        .HasColumnName("area_sqkm")
                        .HasColumnType("smallint");

                    b.Property<Geometry>("Centroid")
                        .HasColumnName("centroid")
                        .HasColumnType("geometry");

                    b.Property<short?>("CheckMe")
                        .HasColumnName("check_me")
                        .HasColumnType("smallint");

                    b.Property<string>("CodeHasc")
                        .HasColumnName("code_hasc")
                        .HasColumnType("character varying(8)")
                        .HasMaxLength(8);

                    b.Property<string>("CodeLocal")
                        .HasColumnName("code_local")
                        .HasColumnType("character varying(5)")
                        .HasMaxLength(5);

                    b.Property<short?>("Datarank")
                        .HasColumnName("datarank")
                        .HasColumnType("smallint");

                    b.Property<int?>("DissMe")
                        .HasColumnName("diss_me")
                        .HasColumnType("integer");

                    b.Property<string>("Featurecla")
                        .HasColumnName("featurecla")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Fips")
                        .HasColumnName("fips")
                        .HasColumnType("character varying(5)")
                        .HasMaxLength(5);

                    b.Property<string>("FipsAlt")
                        .HasColumnName("fips_alt")
                        .HasColumnType("character varying(9)")
                        .HasMaxLength(9);

                    b.Property<short?>("GadmLevel")
                        .HasColumnName("gadm_level")
                        .HasColumnType("smallint");

                    b.Property<MultiPolygon>("Geom")
                        .HasColumnName("geom")
                        .HasColumnType("geometry(MultiPolygon)");

                    b.Property<string>("Geonunit")
                        .HasColumnName("geonunit")
                        .HasColumnType("character varying(40)")
                        .HasMaxLength(40);

                    b.Property<string>("GnA1Code")
                        .HasColumnName("gn_a1_code")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("GnId")
                        .HasColumnName("gn_id")
                        .HasColumnType("integer");

                    b.Property<short?>("GnLevel")
                        .HasColumnName("gn_level")
                        .HasColumnType("smallint");

                    b.Property<string>("GnName")
                        .HasColumnName("gn_name")
                        .HasColumnType("character varying(72)")
                        .HasMaxLength(72);

                    b.Property<string>("GnRegion")
                        .HasColumnName("gn_region")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("GnsAdm1")
                        .HasColumnName("gns_adm1")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4);

                    b.Property<int?>("GnsId")
                        .HasColumnName("gns_id")
                        .HasColumnType("integer");

                    b.Property<string>("GnsLang")
                        .HasColumnName("gns_lang")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<short?>("GnsLevel")
                        .HasColumnName("gns_level")
                        .HasColumnType("smallint");

                    b.Property<string>("GnsName")
                        .HasColumnName("gns_name")
                        .HasColumnType("character varying(80)")
                        .HasMaxLength(80);

                    b.Property<string>("GnsRegion")
                        .HasColumnName("gns_region")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4);

                    b.Property<string>("GuA3")
                        .HasColumnName("gu_a3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("HascMaybe")
                        .HasColumnName("hasc_maybe")
                        .HasColumnType("character varying(13)")
                        .HasMaxLength(13);

                    b.Property<string>("Iso31662")
                        .HasColumnName("iso_3166_2")
                        .HasColumnType("character varying(8)")
                        .HasMaxLength(8);

                    b.Property<string>("IsoA2")
                        .HasColumnName("iso_a2")
                        .HasColumnType("character varying(2)")
                        .HasMaxLength(2);

                    b.Property<short?>("Labelrank")
                        .HasColumnName("labelrank")
                        .HasColumnType("smallint");

                    b.Property<double?>("Latitude")
                        .HasColumnName("latitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("double precision");

                    b.Property<short?>("Mapcolor13")
                        .HasColumnName("mapcolor13")
                        .HasColumnType("smallint");

                    b.Property<short?>("Mapcolor9")
                        .HasColumnName("mapcolor9")
                        .HasColumnType("smallint");

                    b.Property<double?>("MaxLabel")
                        .HasColumnName("max_label")
                        .HasColumnType("double precision");

                    b.Property<double?>("MinLabel")
                        .HasColumnName("min_label")
                        .HasColumnType("double precision");

                    b.Property<double?>("MinZoom")
                        .HasColumnName("min_zoom")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("character varying(44)")
                        .HasMaxLength(44);

                    b.Property<string>("NameAlt")
                        .HasColumnName("name_alt")
                        .HasColumnType("character varying(129)")
                        .HasMaxLength(129);

                    b.Property<string>("NameAr")
                        .HasColumnName("name_ar")
                        .HasColumnType("character varying(85)")
                        .HasMaxLength(85);

                    b.Property<string>("NameBn")
                        .HasColumnName("name_bn")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<string>("NameDe")
                        .HasColumnName("name_de")
                        .HasColumnType("character varying(51)")
                        .HasMaxLength(51);

                    b.Property<string>("NameEl")
                        .HasColumnName("name_el")
                        .HasColumnType("character varying(82)")
                        .HasMaxLength(82);

                    b.Property<string>("NameEn")
                        .HasColumnName("name_en")
                        .HasColumnType("character varying(47)")
                        .HasMaxLength(47);

                    b.Property<string>("NameEs")
                        .HasColumnName("name_es")
                        .HasColumnType("character varying(52)")
                        .HasMaxLength(52);

                    b.Property<string>("NameFr")
                        .HasColumnName("name_fr")
                        .HasColumnType("character varying(52)")
                        .HasMaxLength(52);

                    b.Property<string>("NameHi")
                        .HasColumnName("name_hi")
                        .HasColumnType("character varying(134)")
                        .HasMaxLength(134);

                    b.Property<string>("NameHu")
                        .HasColumnName("name_hu")
                        .HasColumnType("character varying(41)")
                        .HasMaxLength(41);

                    b.Property<string>("NameId")
                        .HasColumnName("name_id")
                        .HasColumnType("character varying(45)")
                        .HasMaxLength(45);

                    b.Property<string>("NameIt")
                        .HasColumnName("name_it")
                        .HasColumnType("character varying(49)")
                        .HasMaxLength(49);

                    b.Property<string>("NameJa")
                        .HasColumnName("name_ja")
                        .HasColumnType("character varying(93)")
                        .HasMaxLength(93);

                    b.Property<string>("NameKo")
                        .HasColumnName("name_ko")
                        .HasColumnType("character varying(58)")
                        .HasMaxLength(58);

                    b.Property<short?>("NameLen")
                        .HasColumnName("name_len")
                        .HasColumnType("smallint");

                    b.Property<string>("NameLocal")
                        .HasColumnName("name_local")
                        .HasColumnType("character varying(66)")
                        .HasMaxLength(66);

                    b.Property<string>("NameNl")
                        .HasColumnName("name_nl")
                        .HasColumnType("character varying(44)")
                        .HasMaxLength(44);

                    b.Property<string>("NamePl")
                        .HasColumnName("name_pl")
                        .HasColumnType("character varying(45)")
                        .HasMaxLength(45);

                    b.Property<string>("NamePt")
                        .HasColumnName("name_pt")
                        .HasColumnType("character varying(43)")
                        .HasMaxLength(43);

                    b.Property<string>("NameRu")
                        .HasColumnName("name_ru")
                        .HasColumnType("character varying(91)")
                        .HasMaxLength(91);

                    b.Property<string>("NameSv")
                        .HasColumnName("name_sv")
                        .HasColumnType("character varying(48)")
                        .HasMaxLength(48);

                    b.Property<string>("NameTr")
                        .HasColumnName("name_tr")
                        .HasColumnType("character varying(44)")
                        .HasMaxLength(44);

                    b.Property<string>("NameVi")
                        .HasColumnName("name_vi")
                        .HasColumnType("character varying(49)")
                        .HasMaxLength(49);

                    b.Property<string>("NameZh")
                        .HasColumnName("name_zh")
                        .HasColumnType("character varying(61)")
                        .HasMaxLength(61);

                    b.Property<long?>("NeId")
                        .HasColumnName("ne_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasColumnType("character varying(114)")
                        .HasMaxLength(114);

                    b.Property<string>("Postal")
                        .HasColumnName("postal")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("ProvnumNe")
                        .HasColumnName("provnum_ne")
                        .HasColumnType("integer");

                    b.Property<string>("Region")
                        .HasColumnName("region")
                        .HasColumnType("character varying(43)")
                        .HasMaxLength(43);

                    b.Property<string>("RegionCod")
                        .HasColumnName("region_cod")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<string>("RegionSub")
                        .HasColumnName("region_sub")
                        .HasColumnType("character varying(41)")
                        .HasMaxLength(41);

                    b.Property<short?>("Sameascity")
                        .HasColumnName("sameascity")
                        .HasColumnType("smallint");

                    b.Property<short?>("Scalerank")
                        .HasColumnName("scalerank")
                        .HasColumnType("smallint");

                    b.Property<string>("SovA3")
                        .HasColumnName("sov_a3")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SubCode")
                        .HasColumnName("sub_code")
                        .HasColumnType("character varying(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("character varying(38)")
                        .HasMaxLength(38);

                    b.Property<string>("TypeEn")
                        .HasColumnName("type_en")
                        .HasColumnType("character varying(27)")
                        .HasMaxLength(27);

                    b.Property<string>("Wikidataid")
                        .HasColumnName("wikidataid")
                        .HasColumnType("character varying(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Wikipedia")
                        .HasColumnName("wikipedia")
                        .HasColumnType("character varying(84)")
                        .HasMaxLength(84);

                    b.Property<int?>("WoeId")
                        .HasColumnName("woe_id")
                        .HasColumnType("integer");

                    b.Property<string>("WoeLabel")
                        .HasColumnName("woe_label")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<string>("WoeName")
                        .HasColumnName("woe_name")
                        .HasColumnType("character varying(44)")
                        .HasMaxLength(44);

                    b.HasKey("Gid")
                        .HasName("ne_10m_admin_1_states_provinces_pkey");

                    b.HasIndex("Geom")
                        .HasName("ne_10m_admin_1_states_provinces_geom_idx")
                        .HasAnnotation("Npgsql:IndexMethod", "gist");

                    b.ToTable("States");
                });

            modelBuilder.Entity("CovidLAMap.Core.DTOs.EthValueDTO", b =>
                {
                    b.HasOne("CovidLAMap.Core.DTOs.EthEventDTO", null)
                        .WithMany("IndexedParameters")
                        .HasForeignKey("EthEventDTOId");

                    b.HasOne("CovidLAMap.Core.DTOs.EthEventDTO", null)
                        .WithMany("NonIndexedParameters")
                        .HasForeignKey("EthEventDTOId1");
                });

            modelBuilder.Entity("CovidLAMap.Core.Models.RegisteredCredential", b =>
                {
                    b.HasOne("CovidLAMap.Core.Models.Country", "Country")
                        .WithMany("RegisteredCredentials")
                        .HasForeignKey("CountryGid")
                        .HasConstraintName("InCountry")
                        .IsRequired();

                    b.HasOne("CovidLAMap.Core.Models.State", "State")
                        .WithMany("RegisteredCredentials")
                        .HasForeignKey("StateGid")
                        .HasConstraintName("InState")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
